{"version":3,"sources":["components/Header.jsx","context/AppReducer.js","context/GlobalState.js","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","accumulator","toFixed","Fragment","IncomeExpenses","amounts","income","item","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEaA,G,MAAS,WAClB,OACI,iD,qBCJO,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,qBACD,OAAO,eACAF,EADP,CAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAEzF,IAAK,kBACD,OAAO,eACAP,EADP,CAEIG,aAAa,CAAGF,EAAOM,SAAX,mBAAuBP,EAAMG,iBAEjD,QACI,OAAOH,ICTbQ,EAAe,CACjBL,aAAc,IAILM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChBC,qBAAWC,EAAYN,GADP,mBACpCR,EADoC,KAC7Be,EAD6B,KAkB5C,OACI,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3Bd,aAAcH,EAAMG,aACpBe,kBAjBR,SAA2BZ,GACvBS,EAAS,CACLb,KAAM,qBACNK,QAASD,KAeTa,eAXR,SAAwBd,GACpBU,EAAS,CACLb,KAAM,kBACNK,QAASF,OAUPO,ICjCDQ,EAAU,WAAO,IAIpBC,EAFmBC,qBAAWb,GAA5BN,aACqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UACtCC,QAAO,SAACC,EAAaF,GAAd,OAA0BE,EAAeF,IAAS,GAAGG,QAAQ,GAE1F,OACI,kBAAC,IAAMC,SAAP,KACI,4CACA,gCAAOP,KCTNQ,EAAiB,WAAO,IAI7BC,EAFmBR,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtDO,EAASD,EACZ1B,QAAO,SAAA4B,GAAI,OAAIA,EAAO,KACtBP,QAAO,SAACC,EAAaF,GAAd,OAA0BE,EAAeF,IAAS,GACzDG,QAAQ,GAELM,IAG8D,EAFlEH,EACG1B,QAAO,SAAA4B,GAAI,OAAIA,EAAO,KACtBP,QAAO,SAACC,EAAaF,GAAd,OAA0BE,EAAeF,IAAS,IAC1DG,QAAQ,GAEV,OACI,yBAAKO,UAAU,qBACf,6BACE,sCACA,uBAAGA,UAAU,cAAeH,IAE9B,6BACE,uCACA,uBAAGG,UAAU,eAAgBD,MCzB1BE,EAAc,SAAC,GAAqB,IAAnB9B,EAAkB,EAAlBA,YAElBa,EAAsBI,qBAAWb,GAAjCS,kBAEFkB,EAAO/B,EAAYmB,OAAS,EAAI,IAAM,IAE5C,OACI,wBAAIU,UAAY7B,EAAYmB,OAAS,EAAI,QAAU,QAC7CnB,EAAYgC,KADlB,IACwB,8BAAQD,EAAR,IAAiBE,KAAKC,IAAIlC,EAAYmB,SAAgB,4BAAQgB,QAAU,kBAAMtB,EAAkBb,EAAYC,KAAM4B,UAAU,cAAtE,OCPzEO,EAAkB,WAAO,IAE1BtC,EAAiBmB,qBAAWb,GAA5BN,aAER,OACI,kBAAC,IAAMyB,SAAP,KACI,uCACA,wBAAIM,UAAU,QACR/B,EAAaoB,KAAI,SAAAlB,GAAW,OAC1B,kBAAC,EAAD,CAAaqC,IAAMrC,EAAYC,GAAKD,YAAcA,UCVzDsC,EAAiB,WAAO,IAAD,EAENC,mBAAS,IAFH,mBAExBP,EAFwB,KAElBQ,EAFkB,OAGFD,mBAAS,GAHP,mBAGxBpB,EAHwB,KAGhBsB,EAHgB,KAIxB3B,EAAmBG,qBAAWb,GAA9BU,eAcR,OACI,kBAAC,IAAMS,SAAP,KACI,mDACA,0BAAMmB,SAfC,SAACC,GACZA,EAAMC,iBAEN,IAAMC,EAAiB,CACnB5C,GAAIgC,KAAKa,MAAsB,IAAhBb,KAAKc,UACpBf,OACAb,QAASA,GAGbL,EAAe+B,KAOP,yBAAKhB,UAAU,gBACX,2BAAOmB,QAAQ,QAAf,QACA,2BAAOnD,KAAK,OAAOe,MAAQoB,EAAOiB,SAAW,SAACN,GAAD,OAAWH,EAAQG,EAAMO,OAAOtC,QAASuC,YAAY,mBAEtG,yBAAKtB,UAAU,gBACX,2BAAOmB,QAAQ,UAAf,UACY,6BADZ,2CAIA,2BAAOnD,KAAK,SAASe,MAAQO,EAAS8B,SAAW,SAACN,GAAD,OAAWF,EAAUE,EAAMO,OAAOtC,QAASuC,YAAY,qBAE5G,4BAAQtB,UAAU,OAAlB,sBCbDuB,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKvB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCbRwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.44eb38b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return ( \r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n     );\r\n}","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            };\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [ action.payload, ...state.transactions ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: []\r\n};\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [ state, dispatch ] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            { children }\r\n        </GlobalContext.Provider>\r\n    );\r\n};","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((accumulator, amount) => (accumulator += amount), 0).toFixed(2);\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <h4>Your Balance</h4>\r\n            <h1>${ total }</h1>\r\n        </React.Fragment>\r\n     );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((accumulator, amount) => (accumulator += amount), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts\r\n      .filter(item => item < 0)\r\n      .reduce((accumulator, amount) => (accumulator += amount), 0) * -1\r\n    ).toFixed(2);\r\n \r\n    return ( \r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">{ income }</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">{ expense }</p>\r\n        </div>\r\n      </div>\r\n     );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return ( \r\n        <li className={ transaction.amount < 0 ? 'minus' : 'plus' }>\r\n            { transaction.text} <span>{ sign }${ Math.abs(transaction.amount) }</span><button onClick={ () => deleteTransaction(transaction.id) } className=\"delete-btn\">x</button>\r\n        </li>\r\n     );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                { transactions.map(transaction => (\r\n                    <Transaction key={ transaction.id } transaction={ transaction } />\r\n                )) }\r\n            </ul>\r\n        </React.Fragment>\r\n     );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [ text, setText ] = useState('');\r\n    const [ amount, setAmount ] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const submit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        };\r\n\r\n        addTransaction(newTransaction);\r\n    };\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={ submit }>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={ text } onChange={ (event) => setText(event.target.value) } placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                        >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={ amount } onChange={ (event) => setAmount(event.target.value) } placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </React.Fragment>\r\n     );\r\n}","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header /> \n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}